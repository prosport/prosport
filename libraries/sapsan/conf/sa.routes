
###############################################################################
# Маршруты для авторизации
###############################################################################
#GET     /login                              controllers.sa.Auth.login
#POST    /login                              controllers.sa.Auth.authenticate
#GET     /logout                             controllers.sa.Auth.logout


###############################################################################
# Маршруты для сущности Сапсан-Админ
###############################################################################

GET     /                     controllers.sa.AdminController.index



GET     /random/:numberAddingEntries     controllers.sa.GenController.random(numberAddingEntries: Integer)
GET     /i18l/:onlyNew                   controllers.sa.GenController.i18l(onlyNew: Boolean)
GET     /unit-tests                      controllers.sa.GenController.unitTests


#
GET     /:model               controllers.sa.AdminController.list(model: String, page: Int ?= 0, sort ?= "", order ?= "asc")

#
GET     /:model/new           controllers.sa.AdminController.create(model: String)
POST    /:model               controllers.sa.AdminController.save(model: String)

#
GET     /:model/:id           controllers.sa.AdminController.edit(model: String, id: Long)
POST    /:model/:id           controllers.sa.AdminController.update(model: String, id: Long)

#
GET     /:model/export        controllers.sa.AdminController.exportConfig(model: String)
POST    /:model/export        controllers.sa.AdminController.export(model: String, all: Boolean ?= true)

#
GET     /:model/history       controllers.sa.AdminController.history(model: String)

#
POST    /:model/bulk_action   controllers.sa.AdminController.bulkAction(model: String)

#
GET     /:model/:id/history   controllers.sa.AdminController.historyRecord(model: String, id: Long)

#
GET     /:model/:id/show      controllers.sa.AdminController.show(model: String, id: Long)

#
GET     /:model/:id/delete    controllers.sa.AdminController.deleteConfirm(model: String, id: Long)
POST    /:model/:id/delete    controllers.sa.AdminController.delete(model: String, id: Long)


## Map static resources from the /public folder to the /assets URL path
GET     /assets/*file         controllers.sa.Assets.at(path="/public", file)
